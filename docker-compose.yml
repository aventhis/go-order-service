version: '3.9'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: order-service
  #   ports:
  #     - "${APP_PORT:-8081}:8081"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     kafka:
  #       condition: service_started
  #   environment:
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_NAME=${DB_NAME}
  #     - DB_SSL_MODE=${DB_SSL_MODE}
  #     - KAFKA_BROKERS=${KAFKA_BROKERS}
  #     - APP_ENV=${APP_ENV}
  #   restart: unless-stopped

volumes:
  postgres_data: