version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "${APP_PORT:-8081}:8081"
    depends_on:
      db:
        #        «Запусти мой сервис (app) только после того,
        #  как сервис postgres станет healthy, т.е. пройдет healthcheck.»
        condition: service_healthy
      # kafka:
      #   condition: service_started
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - APP_ENV=${APP_ENV}
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: pg
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    #   healthcheck Это позволит app дождаться, пока база готова принимать соединения
    #  — а не просто запущена.
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}" ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pgdata: